// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'app/features/ai/data/tb_document.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 2246371080391273654),
      name: 'TbDocument',
      lastPropertyId: const obx_int.IdUid(5, 9023067105925775344),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5291192030193256071),
            name: 'internalId',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3119469556551188322),
            name: 'id',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(1, 5604955065836415858)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4617200983847387491),
            name: 'content',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7405803101028002447),
            name: 'metadata',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 9023067105925775344),
            name: 'embedding',
            type: 28,
            flags: 8,
            indexId: const obx_int.IdUid(2, 3116194390691805316),
            hnswParams: obx_int.ModelHnswParams(
              dimensions: 512,
            ))
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 2246371080391273654),
      lastIndexId: const obx_int.IdUid(2, 3116194390691805316),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    TbDocument: obx_int.EntityDefinition<TbDocument>(
        model: _entities[0],
        toOneRelations: (TbDocument object) => [],
        toManyRelations: (TbDocument object) => {},
        getId: (TbDocument object) => object.internalId,
        setId: (TbDocument object, int id) {
          object.internalId = id;
        },
        objectToFB: (TbDocument object, fb.Builder fbb) {
          final idOffset = fbb.writeString(object.id);
          final contentOffset = fbb.writeString(object.content);
          final metadataOffset = fbb.writeString(object.metadata);
          final embeddingOffset = fbb.writeListFloat32(object.embedding);
          fbb.startTable(6);
          fbb.addInt64(0, object.internalId);
          fbb.addOffset(1, idOffset);
          fbb.addOffset(2, contentOffset);
          fbb.addOffset(3, metadataOffset);
          fbb.addOffset(4, embeddingOffset);
          fbb.finish(fbb.endTable());
          return object.internalId;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final contentParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final metadataParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final embeddingParam =
              const fb.ListReader<double>(fb.Float32Reader(), lazy: false)
                  .vTableGet(buffer, rootOffset, 12, []);
          final object = TbDocument(
              id: idParam,
              content: contentParam,
              metadata: metadataParam,
              embedding: embeddingParam)
            ..internalId =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [TbDocument] entity fields to define ObjectBox queries.
class TbDocument_ {
  /// See [TbDocument.internalId].
  static final internalId =
      obx.QueryIntegerProperty<TbDocument>(_entities[0].properties[0]);

  /// See [TbDocument.id].
  static final id =
      obx.QueryStringProperty<TbDocument>(_entities[0].properties[1]);

  /// See [TbDocument.content].
  static final content =
      obx.QueryStringProperty<TbDocument>(_entities[0].properties[2]);

  /// See [TbDocument.metadata].
  static final metadata =
      obx.QueryStringProperty<TbDocument>(_entities[0].properties[3]);

  /// See [TbDocument.embedding].
  static final embedding =
      obx.QueryHnswProperty<TbDocument>(_entities[0].properties[4]);
}
